{"version":3,"sources":["services/generic-service.js","components/header/header.js","components/most-active-stocks-tabs/stock-card/stock-card.js","components/most-active-stocks-tabs/most-active-stocks-tabs.js","components/data-grid/data-grid.js","shared/constants.js","components/stock-details/stock-figure/stock-figure.js","components/stock-details/basic-info/basic-info.js","services/date-service.js","components/stock-details/company-news/news-card/news-card.js","components/stock-details/company-news/company-news.js","components/stock-details/stock-details.js","layout.js","serviceWorker.js","index.js"],"names":["tickerSubject","BehaviorSubject","errorMessageSubject","mostActiveDaysRangeSubject","tickerService","ticker","next","asObservable","errorMessageService","message","daysRangeService","daysRange","Header","props","state","inputTicker","handleChange","bind","handleBlur","handleSubmit","handlingComposition","handleComposition","isCompositionEnd","this","tickerSubscription","subscribe","setState","unsubscribe","e","event","target","value","trim","toUpperCase","preventDefault","className","Grid","container","spacing","justify","alignItems","item","xs","md","href","onSubmit","FormControl","Input","id","onCompositionStart","onCompositionUpdate","onCompositionEnd","onChange","onBlur","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","edge","color","React","Component","StockCard","data","Card","style","backgroundColor","handleClickTicker","CardContent","Typography","gutterBottom","name","variant","component","noOfBuy","noOfSell","noOfTransactions","arkData","require","MostActiveStocksTabs","handleTabChange","newTabIndex","tabIndex","tabsColor","tabIndicatorColor","mostActiveStocks","mostBuyStocks","mostSellStocks","mostActiveDaysRangeSubscription","initCardsData","hash","rslt","lastestDate","Date","deadlineTimestamp","setHours","tran","Ticker","push","Name","directionSymbols","transactionsDetails","stock","find","x","Direction","unshift","numberOfStocks","length","filter","sort","a","b","slice","Tabs","orientation","TabIndicatorProps","background","Tab","label","a11yProps","TabPanel","index","map","el","key","children","other","role","hidden","aria-labelledby","Box","p","rawData","Array","prototype","swapElements","splice","DataGrid","width","window","innerWidth","height","innerHeight","updateWindowDimensions","columnDefs","Object","keys","massageRawData","genericColDef","field","specificColDef","minWidth","assign","tempData","_","addEventListener","removeEventListener","dataGridDef","defaultColDef","resizable","sortable","floatingFilter","getColumnDefs","rowData","paginationPageSize","join","pagination","onRowClicked","token","StockFigure","formatDollarAmount","amount","toFixed","handleCandlestickDaysRangeChange","newValue","candlestickDaysRange","massagedData","getCandleData","figureTitle","isFigureLoading","figureRangeButtonConfigs","text","resolution","endDate","startDate","apiParams","symbol","from","to","Consts","paramsArray","prop","getCandleUrl","fetch","method","then","response","ok","status","Error","json","s","massaged","i","t","row","time","toISOString","split","parseInt","temp","setMinutes","getMinutes","toLocaleTimeString","Math","round","o","c","l","h","v","catch","error","categoryData","values","volumes","dayCount","result","len","sum","j","splitData","option","title","left","top","textStyle","fontSize","tooltip","trigger","axisPointer","animation","type","lineStyle","opacity","legend","inactiveColor","link","xAxisIndex","toolbox","show","feature","dataZoom","yAxisIndex","brush","visualMap","seriesIndex","dimension","pieces","grid","bottom","xAxis","scale","boundaryGap","axisLine","onZero","splitLine","splitNumber","min","max","axisLabel","gridIndex","axisTick","yAxis","splitArea","start","end","handleIcon","handleSize","dataBackground","areaStyle","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","series","itemStyle","color0","borderColor","borderColor0","markPoint","symbolSize","normal","formatter","param","coord","markLine","valueDim","emphasis","calculateMA","smooth","filteredArkData","groupMap","date","dataArrayInDate","dataInProps","m","buySharesCount","Shares","reduce","sellSharesCount","buyPointText","abs","sellPointText","subComponent","CircularProgress","getOption","notMerge","lazyUpdate","ToggleButtonGroup","exclusive","button","ToggleButton","viewBox","fill","xmlns","d","BasicInfo","isLoading","showInfo","companyInfo","ipoDate","exchange","marketCap","shareOutstanding","logoUrl","companyWebUrl","industry","getBasicInfo","getBasicInfoUrl","constructor","ipo","marketCapitalization","logo","weburl","finnhubIndustry","src","alt","dateService","intervalType","seconds","floor","getTime","interval","NewsCard","location","newsDetails","url","handleClickNews","headline","datetime","source","summary","substring","CompanyNews","news","getCompanyNews","getCompanyNewsUrl","element","StockDetails","AppBar","icon","disabled","Layout","expanded","mostActiveDaysRange","errorMessage","isInputing","handlePanelChange","handleClickDaysRange","handleSelectDaysRange","handleDonationSectionClick","coffeeEmoji","createRef","panelArr","indexOf","errorMessageSubscription","panel","isExpanded","stopPropagation","console","log","current","click","notificationBar","Alert","severity","onClose","Accordion","includes","AccordionSummary","expandIcon","aria-controls","Select","labelId","MenuProps","disableScrollLock","MenuItem","AccordionDetails","action","Button","size","ref","border","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c00d3443.chunk.js","sourcesContent":["import { BehaviorSubject } from 'rxjs';\n\nconst tickerSubject = new BehaviorSubject('');\nconst errorMessageSubject = new BehaviorSubject('');\n\nconst mostActiveDaysRangeSubject = new BehaviorSubject(7);\nconst candlestickDaysRangeSubject = new BehaviorSubject(30);\n\nexport const tickerService = {\n    changeTicker: ticker => tickerSubject.next(ticker),\n    clearTicker: () => tickerSubject.next(),\n    getTicker: () => tickerSubject.asObservable()\n};\n\nexport const errorMessageService = {\n    changeErrorMessage: message => errorMessageSubject.next(message),\n    clearErrorMessage: () => errorMessageSubject.next(),\n    getErrorMessage: () => errorMessageSubject.asObservable()\n};\n\nexport const daysRangeService = {\n    changeMostActiveDaysRange: daysRange => mostActiveDaysRangeSubject.next(daysRange),\n    clearMostActiveDaysRange: () => mostActiveDaysRangeSubject.next(),\n    getMostActiveDaysRange: () => mostActiveDaysRangeSubject.asObservable(),\n\n    changeCandlestickDaysRange: daysRange => candlestickDaysRangeSubject.next(daysRange),\n    clearCandlestickDaysRange: () => candlestickDaysRangeSubject.next(),\n    getCandlestickDaysRange: () => candlestickDaysRangeSubject.asObservable()\n};","import React from 'react';\nimport {\n    Grid, Input, FormControl,\n    IconButton, InputAdornment,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport './header.scss';\nimport { tickerService } from '../../services/generic-service'\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputTicker: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handlingComposition = this.handlingComposition.bind(this);\n        this.handleComposition = this.handleComposition.bind(this);\n        this.isCompositionEnd = true;\n\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ inputTicker: ticker });\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    handlingComposition() {\n        this.isCompositionEnd = false;\n    }\n\n    handleComposition(e) {\n        this.isCompositionEnd = true;\n    }\n\n    handleChange(event) {\n        if (this.isCompositionEnd) {\n            this.setState({ inputTicker: event.target.value.trim().toUpperCase() });\n        }\n    }\n\n    handleBlur(event) {\n        this.isCompositionEnd = true;\n    }\n\n    handleSubmit(event) {\n        tickerService.changeTicker(this.state.inputTicker);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"header-section\">\n                <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n                    <Grid item xs={6} md={10} className='title-container'>\n                        {/* <span className=\"logo\">\n                            <a href=\"http://karlzhu-se.github.io/ark-funds-monitor/\">\n                                <img height=\"90\" width=\"120\" src=\"https://ark-funds.com/wp-content/uploads/2020/07/ark-logo-1-1.svg\" alt=\"ark-funds.com\" title=\"\" />\n                            </a>\n                        </span> */}\n                        <a className='title' href=\"http://karlzhu-se.github.io/ark-funds-monitor/\">\n                            <span>ARK Funds Monitor</span>\n                        </a>\n                        {/* <div className=\"github-section\">\n                            <span>View it on</span>\n                            <a className=\"github-icon\" href=\"https://github.com/KarlZhu-SE/ark-funds-monitor\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"Github\">\n                                <svg height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"24\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg>\n                            </a>\n                        </div> */}\n                    </Grid>\n\n                    <Grid item xs={6} md={2} className=\"ticker-input-section\">\n                        <form onSubmit={this.handleSubmit}>\n                            <FormControl>\n                                <div>\n                                    <Input\n                                        id=\"ticker-textfield\"\n                                        value={this.state.inputTicker}\n                                        onCompositionStart={this.handlingComposition}\n                                        onCompositionUpdate={this.handlingComposition}\n                                        onCompositionEnd={this.handleComposition}\n                                        onChange={this.handleChange}\n                                        onBlur={this.handleBlur}\n                                        placeholder='Ticker'\n                                        endAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <IconButton\n                                                    aria-label=\"Search\"\n                                                    onClick={this.handleSubmit}\n                                                    edge=\"end\"\n                                                >\n                                                    <SearchIcon color=\"primary\" />\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                    />\n                                </div>\n                            </FormControl>\n                        </form>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n};\n\nexport default Header;","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './stock-card.scss';\nimport { tickerService } from '../../../services/generic-service';\n\nclass StockCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    handleClickTicker(event) {\n        tickerService.changeTicker(this.props.data.ticker);\n    }\n\n    render() {\n        return (\n            <div className=\"stock-card-wrapper\">\n                <Card style={{backgroundColor: this.props.backgroundColor}} onClick={this.handleClickTicker.bind(this)}>\n                    <CardContent>\n                        <Typography className='card-ticker'>\n                            {this.props.data.ticker}\n                        </Typography>\n                        <Typography className='card-full-name' color=\"textSecondary\" gutterBottom>\n                            {this.props.data.name}\n                        </Typography>\n                        <Typography className='card-details' variant=\"body2\" component=\"p\">\n                            Buys : {this.props.data.noOfBuy}\n                            <br/>\n                            Sells: {this.props.data.noOfSell}\n                            <br/>\n                            Trans: {this.props.data.noOfTransactions}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n};\n\nexport default StockCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport './most-active-stocks-tabs.scss';\nimport StockCard from './stock-card/stock-card';\nimport { daysRangeService } from '../../services/generic-service';\n\nlet arkData = require('../../rawData/mergedData.json');\n\nclass MostActiveStocksTabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tabIndex: 0,\n            // buy, sell, active colors\n            tabsColor: ['#00C805', '#FF5000', '#FCAE1E'],\n            tabIndicatorColor: '#00C805',\n            mostActiveStocks: [],\n            mostBuyStocks: [],\n            mostSellStocks: []\n        };\n        this.props = props;\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(daysRange => {\n            if (daysRange) {\n                this.initCardsData(arkData, daysRange);\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.mostActiveDaysRangeSubscription.unsubscribe();\n    }\n\n    initCardsData(arkData, daysRange) {\n        // for now, check all time data\n        // [{\n        // ticker: 'TSLA'\n        // name: Name\n        // noOfSell:\n        // noOfBuy:\n        // noOfTransactions: number:\n        // directionSymbol: []\n        // transactionsDetails: []\n        // }]\n        let hash = {};\n        let rslt = [];\n        let lastestDate = arkData[0].Date;\n        let deadlineTimestamp = '';\n\n        if (daysRange !== 10000) {\n            deadlineTimestamp = new Date(lastestDate).setHours(0, 0, 0, 0) - daysRange * 24 * 60 * 60 * 1000;\n        }\n\n        for (let tran of arkData) {\n            // handle deadline\n            if (deadlineTimestamp && new Date(tran.Date).setHours(0, 0, 0, 0) <= deadlineTimestamp) {\n                break;\n            }\n\n            if (!hash[tran.Ticker]) {\n                hash[tran.Ticker] = 1;\n                rslt.push({\n                    ticker: tran.Ticker,\n                    name: tran.Name,\n                    noOfSell: 0,\n                    noOfBuy: 0,\n                    noOfTransactions: 0,\n                    directionSymbols: [],\n                    transactionsDetails: []\n                })\n            } else {\n                hash[tran.Ticker]++;\n            }\n\n            const stock = rslt.find(x => x.ticker === tran.Ticker);\n            if (tran.Direction === 'Buy') {\n                stock.noOfBuy++;\n            } else if (tran.Direction === 'Sell') {\n                stock.noOfSell++;\n            }\n            stock.noOfTransactions++;\n            stock.directionSymbols.unshift(tran.Direction);\n            stock.transactionsDetails.push(tran);\n        }\n\n        const numberOfStocks = (rslt.length > 15 && daysRange !== 1) ? 15 : rslt.length;\n        // eslint-disable-next-line\n        this.state.mostBuyStocks = rslt.filter(x => x.noOfBuy > 0).sort((a, b) => b.noOfBuy - a.noOfBuy).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostSellStocks = rslt.filter(x => x.noOfSell > 0).sort((a, b) => b.noOfSell - a.noOfSell).slice(0, numberOfStocks);\n        // eslint-disable-next-line\n        this.state.mostActiveStocks = rslt.sort((a, b) => b.noOfTransactions - a.noOfTransactions).slice(0, numberOfStocks);\n    }\n\n    handleTabChange = (event, newTabIndex) => {\n        this.setState({ tabIndex: newTabIndex });\n    };\n\n    render() {\n        return (\n            <div className=\"most-active-stocks-tabs-section\">\n                <Tabs\n                    orientation=\"vertical\"\n                    variant=\"scrollable\"\n                    value={this.state.tabIndex}\n                    onChange={this.handleTabChange}\n                    aria-label=\"Vertical tabs example\"\n                    TabIndicatorProps={{ style: { background: this.state.tabsColor[this.state.tabIndex] } }}\n                >\n                    <Tab label=\"Most Buy\" {...a11yProps(0)} />\n                    <Tab label=\"Most Sell\" {...a11yProps(1)} />\n                    <Tab label=\"Most Active\" {...a11yProps(2)} />\n                </Tabs>\n\n                <TabPanel value={this.state.tabIndex} index={0}>\n                    {this.state.mostBuyStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={1}>\n                    {this.state.mostSellStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={2}>\n                    {this.state.mostActiveStocks.map(el =>\n                        <StockCard key={el.ticker} data={el} backgroundColor={this.state.tabsColor[this.state.tabIndex]} />\n                    )}\n                </TabPanel>\n            </div>\n        );\n    }\n};\n\nexport default MostActiveStocksTabs;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`vertical-tabpanel-${index}`}\n            aria-labelledby={`vertical-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3} className=\"vertical-tabpanel-content\">\n                    <div className=\"cards-wrapper\">{children}</div>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${index}`,\n        'aria-controls': `vertical-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport * as _ from 'lodash';\nimport { Grid } from '@material-ui/core';\n\nimport './data-grid.scss';\nimport { tickerService } from '../../services/generic-service'\n\nlet rawData = require('../../rawData/mergedData.json');\n\n// eslint-disable-next-line\nArray.prototype.swapElements = function (a, b) {\n    this[a] = this.splice(b, 1, this[a])[0];\n    return this;\n}\n\nclass DataGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    getColumnDefs(rawData) {\n        const columnDefs = [];\n        const columnNamesInOrder = Object.keys(this.massageRawData(rawData)[0]).swapElements(0, 1);\n        // eslint-disable-next-line\n        columnNamesInOrder.map(x => {\n            let genericColDef = {\n                field: x,\n            };\n            let specificColDef = {};\n            switch (x) {\n                case 'Date':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 120,\n                    }\n                    break\n                case 'Direction':\n                case 'CUSIP':\n                case 'Shares':\n                case '% Of ETF':\n                case 'Ticker':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 100,\n                    }\n                    break\n                case 'FUND':\n                    specificColDef = {\n                        width: this.state.width / 12,\n                        minWidth: 90,\n                    }\n                    break\n                case 'Name':\n                    specificColDef = {\n                        width: this.state.width / 4,\n                    }\n                    break\n                default:\n                    specificColDef = {\n                        width: this.state.width / 8,\n                        minWidth: 100,\n                    };\n                    break;\n            }\n            columnDefs.push(Object.assign(genericColDef, specificColDef));\n        })\n        return columnDefs;\n    }\n\n    massageRawData(rawData) {\n        let tempData = _.cloneDeep(rawData);\n        // remove empty property\n        // eslint-disable-next-line\n        tempData.map(x => {\n            for (let key in x) {\n                if (key === '') {\n                    delete x[key];\n                }\n            }\n        })\n        return tempData;\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    onRowClicked(e) {\n        if (e && e.data && e.data.Ticker) {\n            tickerService.changeTicker(e.data.Ticker);\n        }\n    }\n\n    render() {\n        const dataGridDef = {\n            defaultColDef: {\n                resizable: true,\n                sortable: true,\n                filter: 'agTextColumnFilter',\n                floatingFilter: true\n            },\n            columnDefs: this.getColumnDefs(rawData),\n            rowData: this.massageRawData(rawData),\n            paginationPageSize: 20\n        }\n        return (\n            <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item xs={12} className={['ag-theme-alpine', 'center'].join(' ')}>\n                    <AgGridReact\n                        rowData={dataGridDef.rowData}\n                        columnDefs={dataGridDef.columnDefs}\n                        defaultColDef={dataGridDef.defaultColDef}\n                        // paginationAutoPageSize={true}\n                        paginationPageSize={dataGridDef.paginationPageSize}\n                        pagination={true}\n                        onRowClicked={this.onRowClicked.bind(this)}\n                    >\n                    </AgGridReact>\n                </Grid>\n            </Grid>\n        );\n    }\n};\n\nexport default DataGrid;","export const token = 'bvhuovv48v6okueb0pc0';\n\nexport const getCandleUrl = 'https://finnhub.io/api/v1/stock/candle?';\nexport const getBasicInfoUrl = 'https://finnhub.io/api/v1/stock/profile2?';\nexport const getCompanyNewsUrl = 'https://finnhub.io/api/v1/company-news?';\n","import React from 'react';\nimport * as _ from 'lodash';\nimport ReactEcharts from 'echarts-for-react';\nimport {\n    CircularProgress, Grid\n} from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\n\nimport * as Consts from '../../../shared/constants';\nimport { tickerService, errorMessageService } from '../../../services/generic-service';\nimport './stock-figure.scss';\n\nlet arkData = require('../../../rawData/mergedData.json');\n\nvar downColor = '#FF5000';\nvar downBorderColor = '#8A0000';\nvar upColor = '#00C805';\nvar upBorderColor = '#008F28';\n\nclass StockFigure extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticker: '',\n            figureTitle: '',\n            candlestickDaysRange: 30,\n            isFigureLoading: false,\n            massagedData: [],\n            figureRangeButtonConfigs: [\n                { id: '1D', text: '1D', value: 1, resolution: '5', daysRange: 1 },\n                { id: '1W', text: '1W', value: 7, resolution: 'D', daysRange: 7 },\n                { id: '2W', text: '2W', value: 14, resolution: 'D', daysRange: 14 },\n                { id: '1M', text: '1M', value: 30, resolution: 'D', daysRange: 30 },\n                { id: '3M', text: '3M', value: 90, resolution: 'D', daysRange: 90 },\n                { id: '1Y', text: '1Y', value: 365, resolution: 'D', daysRange: 365 }\n            ]\n        };\n        this.props = props;\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ ticker: ticker });\n                this.getCandleData(ticker, this.state.candlestickDaysRange);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    // Thanks to https://stackoverflow.com/questions/36734201/how-to-convert-numbers-to-million-in-javascript accepted answer\n    formatDollarAmount = (amount) =>\n        // Nine Zeroes for Billions\n        amount >= 1.0e+9\n            ? (amount / 1.0e+9).toFixed(1) + \"B\"\n\n            // Six Zeroes for Millions \n            : amount >= 1.0e+6\n                ? (amount / 1.0e+6).toFixed(1) + \"M\"\n\n                // Three Zeroes for Thousands\n                : amount >= 1.0e+3\n                    ? (amount / 1.0e+3).toFixed(1) + \"K\"\n                    : (amount).toFixed(2);\n\n    getCandleData(ticker, daysRange) {\n        errorMessageService.changeErrorMessage('');\n        this.setState({ isFigureLoading: true });\n\n\n        // let that = this;\n        let endDate = new Date().setHours(0, 0, 0, 0) / 1000;\n        let startDate = endDate - daysRange * 24 * 60 * 60;\n        let resolution = this.state.figureRangeButtonConfigs.find(x => x.value === daysRange).resolution;\n\n        const apiParams = {\n            symbol: ticker,\n            resolution: resolution,\n            from: startDate,\n            to: endDate,\n            token: Consts.token\n        };\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        let getCandleUrl = Consts.getCandleUrl + paramsArray.join('&');\n\n        fetch(getCandleUrl, {\n            method: 'GET'\n        })\n            .then(response => {\n                if (!response.ok) {\n                    if (response.status === 429) {\n                        errorMessageService.changeErrorMessage(`Too Many Requests, Please Wait`);\n                    }\n                    throw new Error(\"HTTP status \" + response.status);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                if (data && data.s === 'ok') {\n                    let massaged = [];\n                    for (let i = 0; i < data.t.length; i++) {\n                        let row = [];\n                        let time = '';\n                        if (resolution === 'D') {\n                            time = new Date(data.t[i] * 1000).toISOString().split(\"T\")[0]\n                        } else if (typeof (parseInt(resolution)) === 'number') {\n                            const temp = new Date(data.t[i] * 1000);\n                            time = new Date(temp.setMinutes(temp.getMinutes() - 240)).toLocaleTimeString(\"en-US\");\n                        }\n\n                        row.push(\n                            time,\n                            Math.round(data.o[i] * 100) / 100,\n                            Math.round(data.c[i] * 100) / 100,\n                            Math.round(data.l[i] * 100) / 100,\n                            Math.round(data.h[i] * 100) / 100,\n                            data.v[i],\n                        )\n                        massaged.push(row);\n                    }\n\n                    this.setState({ figureTitle: ticker });\n                    this.setState({ massagedData: massaged });\n                }\n\n                if (data.s === 'no_data') {\n                    errorMessageService.changeErrorMessage(`API returned 'NO DATA' for ${ticker}`);\n                }\n\n                this.setState({ isFigureLoading: false });\n            })\n            .catch(error => this.setState({ error }));\n    }\n\n    splitData(rawData) {\n        var categoryData = [];\n        var values = [];\n        var volumes = [];\n\n        for (var i = 0; i < rawData.length; i++) {\n            categoryData.push(rawData[i].splice(0, 1)[0]);\n            values.push(rawData[i]);\n            volumes.push([i, rawData[i][4], rawData[i][0] > rawData[i][1] ? 1 : -1]);;\n        }\n        return {\n            categoryData: categoryData,\n            values: values,\n            volumes: volumes\n        };\n    }\n\n    calculateMA(dayCount) {\n        var result = [];\n        for (var i = 0, len = this.data.values.length; i < len; i++) {\n            if (i < dayCount) {\n                result.push('-');\n                continue;\n            }\n            var sum = 0;\n            for (var j = 0; j < dayCount; j++) {\n                sum += this.data.values[i - j][1];\n            }\n            result.push(Math.round(sum / dayCount * 100) / 100);\n        }\n        return result;\n    }\n\n\n    getOption() {\n        this.data = this.splitData(_.cloneDeep(this.state.massagedData));\n        let option = {\n            backgroundColor: '#fff',\n            title: {\n                text: this.state.figureTitle,\n                left: '2%',\n                top: '-1%',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 20\n                },\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    animation: false,\n                    type: 'cross',\n                    label: {\n                        fontSize: 16\n                    },\n                    lineStyle: {\n                        color: '#376df4',\n                        width: 2,\n                        opacity: 1\n                    }\n                },\n                textStyle: {\n                    fontSize: 16\n                }\n            },\n            legend: {\n                data: ['Day'],\n                inactiveColor: '#777',\n                textStyle: {\n                    color: '#000',\n                    fontSize: 16\n                },\n                top: '3%',\n            },\n            axisPointer: {\n                link: { xAxisIndex: 'all' },\n                label: {\n                    backgroundColor: '#777'\n                }\n            },\n            toolbox: {\n                show: false,\n                feature: {\n                    dataZoom: {\n                        yAxisIndex: false\n                    },\n                    brush: {\n                        type: ['lineX', 'clear']\n                    }\n                }\n            },\n            visualMap: {\n                show: false,\n                seriesIndex: 1,\n                dimension: 2,\n                pieces: [{\n                    value: 1,\n                    color: downColor\n                }, {\n                    value: -1,\n                    color: upColor\n                }]\n            },\n            grid: [\n                {\n                    bottom: '30%'\n                },\n                {\n                    height: '15%',\n                    bottom: '10%'\n                }\n            ],\n            xAxis: [\n                {\n                    type: 'category',\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#000' } },\n                    splitLine: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax',\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            fontSize: 14\n                        }\n                    }\n                },\n                {\n                    type: 'category',\n                    gridIndex: 1,\n                    data: this.data.categoryData,\n                    scale: true,\n                    boundaryGap: false,\n                    axisLine: { onZero: false, lineStyle: { color: '#8392A5' } },\n                    axisTick: { show: false },\n                    splitLine: { show: false },\n                    axisLabel: { show: false },\n                    splitNumber: 20,\n                    min: 'dataMin',\n                    max: 'dataMax'\n                }\n            ],\n            yAxis: [{\n                scale: true,\n                splitArea: {\n                    show: true\n                },\n                axisLine: { lineStyle: { color: '#000' } },\n                splitLine: { show: false },\n                axisLabel: {\n                    show: true,\n                    textStyle: {\n                        fontSize: 14\n                    }\n                }\n            },\n            {\n                scale: true,\n                gridIndex: 1,\n                splitNumber: 2,\n                axisLabel: { show: false },\n                axisLine: { show: false, lineStyle: { color: '#000' } },\n                axisTick: { show: false },\n                splitLine: { show: false },\n            }\n            ],\n            dataZoom: [\n                {\n                    type: 'inside',\n                    start: 0,\n                    end: 100\n                },\n                {\n                    show: true,\n                    type: 'slider',\n                    bottom: '2%',\n                    start: 0,\n                    end: 100,\n                    textStyle: {\n                        color: '#8392A5'\n                    },\n                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                    handleSize: '80%',\n                    dataBackground: {\n                        areaStyle: {\n                            color: '#8392A5'\n                        },\n                        lineStyle: {\n                            opacity: 0.8,\n                            color: '#8392A5'\n                        }\n                    },\n                    handleStyle: {\n                        color: '#fff',\n                        shadowBlur: 3,\n                        shadowColor: 'rgba(0, 0, 0, 0.6)',\n                        shadowOffsetX: 2,\n                        shadowOffsetY: 2\n                    }\n                }\n            ],\n            series: [\n                {\n                    name: 'Day',\n                    type: 'candlestick',\n                    data: this.data.values,\n                    itemStyle: {\n                        color: upColor,\n                        color0: downColor,\n                        borderColor: upBorderColor,\n                        borderColor0: downBorderColor\n                    },\n                    markPoint:\n                    {\n                        symbolSize: 60,\n                        label: {\n                            normal: {\n                                formatter: function (param) {\n                                    if (typeof (param) === 'number') {\n                                        return param != null ? Math.round(param.value) : '';\n                                    }\n                                }\n                            }\n                        },\n                        data: [\n                            // {\n                            //     name: 'highest value',\n                            //     type: 'max',\n                            //     valueDim: 'highest',\n                            //     symbolOffset: [0, -30],\n                            //     itemStyle: {\n                            //         color: '#FCAE1E'\n                            //     }\n                            // },\n                            // {\n                            //     name: 'lowest value',\n                            //     type: 'min',\n                            //     valueDim: 'lowest',\n                            //     symbolOffset: [0, -30],\n                            //     itemStyle: {\n                            //         color: '#FCAE1E'\n                            //     }\n                            // },\n                            // {\n                            //     name: 'average value on close',\n                            //     type: 'average',\n                            //     valueDim: 'close',\n                            //     symbolOffset: [0, -20]\n                            // }\n                        ],\n                        tooltip: {\n                            formatter: ((param) => param.name + '<br>' + (param.data.coord || ''))\n                        }\n                    },\n                    markLine: {\n                        symbol: ['none', 'none'],\n                        lineStyle: {\n                            color: downColor\n                        },\n                        data: [\n                            [\n                                {\n                                    name: 'from lowest to highest',\n                                    type: 'min',\n                                    valueDim: 'lowest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                },\n                                {\n                                    type: 'max',\n                                    valueDim: 'highest',\n                                    symbol: 'circle',\n                                    symbolSize: 10,\n                                    label: {\n                                        show: false\n                                    },\n                                    emphasis: {\n                                        label: {\n                                            show: false\n                                        }\n                                    }\n                                }\n                            ],\n                            {\n                                name: 'min line on close',\n                                type: 'min',\n                                valueDim: 'close'\n                            },\n                            {\n                                name: 'max line on close',\n                                type: 'max',\n                                valueDim: 'close'\n                            }\n                        ]\n                    }\n                },\n                {\n                    name: 'Volume',\n                    type: 'bar',\n                    xAxisIndex: 1,\n                    yAxisIndex: 1,\n                    data: this.data.volumes\n                }\n\n            ]\n        };\n\n        // If resolution !== 'D' skip ARK history mark points and MA lines\n        if (this.state.figureRangeButtonConfigs.find(x => x.value === this.state.candlestickDaysRange).resolution !== 'D') {\n            return option;\n        }\n\n        // add MA lines according to candlestickDaysRange\n        if (this.state.candlestickDaysRange >= 10) {\n            option.series.push({\n                name: 'MA5',\n                type: 'line',\n                data: this.calculateMA(5),\n                smooth: true,\n                lineStyle: {\n                    opacity: 0.5\n                },\n                itemStyle: {\n                    color: '#0000FF'\n                }\n            });\n            option.legend.data.push('MA5');\n        }\n        if (this.state.candlestickDaysRange >= 20) {\n            option.series.push({\n                name: 'MA10',\n                type: 'line',\n                data: this.calculateMA(10),\n                smooth: true,\n                lineStyle: {\n                    opacity: 0.5\n                },\n                itemStyle: {\n                    color: '#FFAE19'\n                }\n            });\n            option.legend.data.push('MA10');\n        }\n        if (this.state.candlestickDaysRange >= 40) {\n            option.series.push({\n                name: 'MA20',\n                type: 'line',\n                data: this.calculateMA(20),\n                smooth: true,\n                lineStyle: {\n                    opacity: 0.5\n                },\n                itemStyle: {\n                    color: '#FF00FF',\n                }\n            });\n            option.legend.data.push('MA20');\n        }\n\n        // handle mark point for BUY/SELL from ARK\n        const filteredArkData = arkData.filter(x => x.Ticker === this.state.figureTitle);\n        if (!filteredArkData || filteredArkData.length === 0) {\n            return option;\n        }\n\n        const groupMap = _.groupBy(filteredArkData, 'Date');\n        for (let date in groupMap) {\n            const dataArrayInDate = groupMap[date];\n            const dataInProps = this.state.massagedData.find(m => m[0] === dataArrayInDate[0].Date);\n            if (!(dataInProps && dataInProps[4])) {\n                continue;\n            }\n\n            const buySharesCount = dataArrayInDate\n                .filter(x => x.Direction === 'Buy')\n                .map(x => x.Shares)\n                .reduce((a, b) => parseInt(a) + parseInt(b), 0);\n            const sellSharesCount = dataArrayInDate\n                .filter(x => x.Direction === 'Sell')\n                .map(x => x.Shares)\n                .reduce((a, b) => parseInt(a) + parseInt(b), 0);\n\n            // Use market close price\n            const buyPointText = 'Buy\\n$' + this.formatDollarAmount(Math.abs((buySharesCount) * dataInProps[2]));\n            const sellPointText = 'Sell\\n$' + this.formatDollarAmount(Math.abs((sellSharesCount) * dataInProps[2]));\n\n            if (buySharesCount > 0) {\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\n                    coord: sellSharesCount > 0\n                            ? [dataArrayInDate[0].Date, dataInProps[4] * 1.1]\n                            : [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: buyPointText,\n                    itemStyle: {\n                        color: upColor\n                    },\n                    label: {\n                        fontSize: 10\n                    }\n                })\n            }\n\n            if (sellSharesCount > 0) {\n                option.series[0].markPoint.data.push({\n                    name: `${dataArrayInDate[0].Date} ${dataArrayInDate[0].Direction}`,\n                    coord: [dataArrayInDate[0].Date, dataInProps[4]],\n                    value: sellPointText,\n                    itemStyle: {\n                        color: downColor\n                    },\n                    label: {\n                        fontSize: 10\n                    }\n                })\n            }\n        }\n        return option;\n    }\n\n    handleCandlestickDaysRangeChange = (event, newValue) => {\n        if (newValue !== this.state.candlestickDaysRange && this.state.massagedData.length > 0) {\n            this.setState({ candlestickDaysRange: newValue });\n            this.getCandleData(this.state.ticker, newValue);\n        }\n    };\n\n    render() {\n        let subComponent;\n        if (this.state.isFigureLoading === true) {\n            subComponent =\n                <div className='loader-wrapper'>\n                    <CircularProgress />\n                </div>\n        } else if (this.state.massagedData.length > 0) {\n            // const fullRangePercentage = this.state.massagedData[this.state.massagedData.length - 1][2] / this.state.massagedData.data[0][2] - 1;\n            // const halfRangePercentage = this.state.massagedData[this.state.massagedData.length - 1][2] / this.state.massagedData.data[Math.round((this.state.massagedData.data.length - 1) / 2)][2] - 1;\n\n            // let fullRangeChange = (fullRangePercentage < 0 ? \"\" : \"+\") + (fullRangePercentage * 100).toFixed(2) + '%'\n            // let halfRangeChange = (halfRangePercentage < 0 ? \"\" : \"+\") + (halfRangePercentage * 100).toFixed(2) + '%'\n\n            subComponent =\n                <div>\n                    {/* <div className=\"highlights\">\n                        <div><p>Full range price change: {fullRangeChange}</p></div>\n                        <div><p>Half range price change: {halfRangeChange}</p></div>\n                    </div> */}\n\n                    <ReactEcharts\n                        option={this.getOption()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                        style={{ height: '400px', width: '100%' }}\n                    />\n\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                        <ToggleButtonGroup\n                            className=\"toggle-button-group\"\n                            value={this.state.candlestickDaysRange}\n                            exclusive\n                            onChange={this.handleCandlestickDaysRangeChange}\n                            aria-label=\"figure-range-button-group\"\n                        >\n                            {this.state.figureRangeButtonConfigs.map(button =>\n                                <ToggleButton key={button.id} value={button.value} aria-label={`toggle-button-${button.id}`}>{button.text}</ToggleButton>\n                            )}\n                        </ToggleButtonGroup>\n                    </Grid>\n                </div>\n        } else {\n            subComponent =\n                <div className=\"chart-placeholder\">\n                    <p>\n                        Search Any Ticker/Tap Any Card/Tap Any Row\n                        <br></br>\n                        Candlestick Chart Will Display Below\n                    </p>\n                    <svg width=\"3em\" height=\"3em\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-double-down\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M1.646 6.646a.5.5 0 0 1 .708 0L8 12.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                        <path d=\"M1.646 2.646a.5.5 0 0 1 .708 0L8 8.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\" />\n                    </svg>\n                </div>\n        }\n\n        return (\n            <div>\n                {subComponent}\n            </div>\n        )\n    }\n}\n\nexport default StockFigure;","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport { tickerService, errorMessageService } from '../../../services/generic-service';\nimport './basic-info.scss';\nimport * as Consts from '../../../shared/constants';\n\nclass BasicInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            ticker: '',\n            showInfo: false,\n            companyInfo: {\n                name: '',\n                ipoDate: '',\n                exchange: '',\n                marketCap: 0,\n                shareOutstanding: 0,\n                logoUrl: '',\n                companyWebUrl: '',\n                industry: ''\n            }\n        };\n        this.props = props;\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ ticker: ticker });\n                this.getBasicInfo(ticker);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    getBasicInfo(ticker) {\n        errorMessageService.changeErrorMessage('');\n        this.setState({ isLoading: true });\n\n        const apiParams = {\n            symbol: ticker,\n            token: Consts.token\n        };\n\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        let getBasicInfoUrl = Consts.getBasicInfoUrl + paramsArray.join('&');\n\n        fetch(getBasicInfoUrl, {\n            method: 'GET'\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(\"HTTP status \" + response.status);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                if (data && (Object.keys(data).length !== 0 || data.constructor !== Object)) {\n                    this.setState({\n                        companyInfo: {\n                            ...this.state.companyInfo,\n                            name: data.name,\n                            ipoDate: data.ipo,\n                            exchange: data.exchange,\n                            marketCap: data.marketCapitalization,\n                            shareOutstanding: data.shareOutstanding,\n                            logoUrl: data.logo,\n                            companyWebUrl: data.weburl,\n                            industry: data.finnhubIndustry,\n                        }\n                    });\n                    this.setState({ showInfo: true });\n                } else {\n                    errorMessageService.changeErrorMessage(`API returned 'NO DATA' for ${ticker}`);\n                    this.setState({ showInfo: false });\n                }\n                this.setState({ isLoading: false });\n            })\n            .catch(error => this.setState({ error }));\n    }\n\n    render() {\n        let subComponent;\n        if (this.state.isLoading === true) {\n            subComponent =\n                <div className='loader-wrapper'>\n                    <CircularProgress />\n                </div>\n        } else if (this.state.showInfo) {\n            subComponent =\n                <div>\n                    <p>{this.state.ticker}</p>\n                    <p>{this.state.companyInfo.name}</p>\n                    <a href={this.state.companyInfo.companyWebUrl}>\n                        <img src={this.state.companyInfo.logoUrl} alt=\"Company Logo\"></img>\n                    </a>\n                    <p>IPO Date: {this.state.companyInfo.ipoDate}</p>\n                    <p>Exchange: {this.state.companyInfo.exchange}</p>\n                    <p>Market Cap: {this.state.companyInfo.marketCap}</p>\n                    <p>Share Outstanding: {this.state.companyInfo.shareOutstanding}</p>\n                    <p>Industry: {this.state.companyInfo.industry}</p>\n                </div>\n        }\n        return (\n            <div>\n                {subComponent}\n            </div>\n        );\n    }\n};\n\nexport default BasicInfo;\n","export const dateService = {\n    // calculate date string from n days before today\n    getDateStrOfDateRange: (daysRange) => {\n        const deadlineTimestamp = (new Date().setHours(0, 0, 0, 0) / 1000 - daysRange * 24 * 60 * 60) * 1000;\n        return new Date(deadlineTimestamp).toISOString().split(\"T\")[0];\n    },\n\n    getDateStrFromDate: (date) =>\n        new Date(date.getTime() - (date.getTimezoneOffset() * 60000))\n            .toISOString()\n            .split(\"T\")[0],\n\n    timeSince: (date) => {\n        var seconds = Math.floor(((new Date().getTime()/1000) - date));\n        var intervalType;\n\n        var interval = Math.floor(seconds / 31536000);\n        if (interval >= 1) {\n          intervalType = 'year';\n        } else {\n          interval = Math.floor(seconds / 2592000);\n          if (interval >= 1) {\n            intervalType = 'month';\n          } else {\n            interval = Math.floor(seconds / 86400);\n            if (interval >= 1) {\n              intervalType = 'day';\n            } else {\n              interval = Math.floor(seconds / 3600);\n              if (interval >= 1) {\n                intervalType = \"hour\";\n              } else {\n                interval = Math.floor(seconds / 60);\n                if (interval >= 1) {\n                  intervalType = \"minute\";\n                } else {\n                  interval = seconds;\n                  intervalType = \"second\";\n                }\n              }\n            }\n          }\n        }\n      \n        if (interval > 1 || interval === 0) {\n          intervalType += 's';\n        }\n      \n        return `${interval} ${intervalType} ago`;\n    }\n};","import React from 'react';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport './news-card.scss';\nimport { dateService } from '../../../../services/date-service';\n\nclass NewsCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.props = props;\n    }\n\n    handleClickNews(event) {\n        window.location.href = this.props.newsDetails.url;\n    }\n\n    render() {\n        const MAX_LENGTH = 300;\n\n        return (\n            <div className=\"news-card-wrapper\">\n                <Card onClick={this.handleClickNews.bind(this)}>\n                    <CardContent>\n                        <Typography className='card-headline'>\n                            {this.props.newsDetails.headline}\n                        </Typography>\n                        <Typography className='card-time-source' color=\"textSecondary\" gutterBottom>\n                            {dateService.timeSince(this.props.newsDetails.datetime) + '   ' + this.props.newsDetails.source}\n                        </Typography>\n                        <Typography className='card-details' variant=\"body2\" component=\"span\">\n                            {this.props.newsDetails.summary.length > MAX_LENGTH ?\n                                (\n                                    <div>\n                                        {`${this.props.newsDetails.summary.substring(0, MAX_LENGTH)}...`}<a href={this.props.newsDetails.url}>Read more</a>\n                                    </div>\n                                ) :\n                                <p>{this.props.newsDetails.summary}</p>\n                            }\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </div>\n        );\n    }\n};\n\nexport default NewsCard;\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\n\nimport * as Consts from '../../../shared/constants';\nimport { tickerService } from '../../../services/generic-service';\nimport { dateService } from '../../../services/date-service';\nimport './company-news.scss';\nimport NewsCard from './news-card/news-card'\n\nclass CompanyNews extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            ticker: '',\n            news: []\n        };\n        this.props = props;\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ ticker: ticker });\n                this.getCompanyNews(ticker);\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    getCompanyNews(ticker) {\n        this.setState({ isLoading: true });\n\n        const apiParams = {\n            symbol: ticker,\n            from: dateService.getDateStrOfDateRange(365),\n            to: dateService.getDateStrOfDateRange(0),\n            token: Consts.token\n        };\n\n        let paramsArray = [];\n        for (let prop in apiParams) {\n            paramsArray.push(`${prop}=${apiParams[prop]}`);\n        }\n        let getCompanyNewsUrl = Consts.getCompanyNewsUrl + paramsArray.join('&');\n\n        fetch(getCompanyNewsUrl, {\n            method: 'GET'\n        })\n            .then(response => response.json())\n            .then((data) => {\n                if (data) {\n                    this.setState({ news: data.splice(0, 9)});\n                }\n                this.setState({ isLoading: false });\n            })\n            .catch(error => this.setState({ error }));\n    }\n\n    render() {\n        let subComponent;\n        if (this.state.isLoading === true) {\n            subComponent =\n                <div className='loader-wrapper'>\n                    <CircularProgress />\n                </div>\n        } else {\n            subComponent =\n                <div>\n                    {this.state.news.map(element =>\n                        <NewsCard key={element.id} newsDetails={element} />\n                    )}\n                </div>\n        }\n        return (\n            <div>\n                {subComponent}\n            </div>\n        );\n    }\n};\n\nexport default CompanyNews;\n\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Tabs, Tab, AppBar, Box\n} from '@material-ui/core';\nimport TimelineIcon from '@material-ui/icons/Timeline';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport CommentOutlinedIcon from '@material-ui/icons/CommentOutlined';\n\nimport './stock-details.scss';\nimport { tickerService } from '../../services/generic-service';\nimport StockFigure from './stock-figure/stock-figure'\nimport BasicInfo from './basic-info/basic-info'\nimport CompanyNews from './company-news/company-news'\n\nclass StockDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ticker: '',\n            tabIndex: 0,\n        };\n        this.props = props;\n        this.handleTabChange = this.handleTabChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                this.setState({ ticker: ticker });\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n    }\n\n    handleTabChange = (event, newTabIndex) => {\n        this.setState({ tabIndex: newTabIndex });\n    };\n\n    render() {\n        return (\n            <div className=\"stock-details-inner-wrapper\">\n                <AppBar position=\"static\" color=\"default\">\n                    <Tabs\n                        variant=\"scrollable\"\n                        value={this.state.tabIndex}\n                        onChange={this.handleTabChange}\n                        TabIndicatorProps={{ style: { background: '#6200EE' } }}\n                    >\n                        <Tab label=\"Chart\"  icon={<TimelineIcon />} {...a11yProps(0)} />\n                        <Tab label=\"Basic Info\" disabled={!!!this.state.ticker} icon={<InfoOutlinedIcon />}{...a11yProps(1)} />\n                        <Tab label=\"News\" disabled={!!!this.state.ticker} icon={<CommentOutlinedIcon />}{...a11yProps(2)} />\n                    </Tabs>\n                </AppBar>\n\n                <TabPanel value={this.state.tabIndex} index={0}>\n                    <StockFigure />\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={1}>\n                    <BasicInfo />\n                </TabPanel>\n                <TabPanel value={this.state.tabIndex} index={2}>\n                    <CompanyNews />\n                </TabPanel>\n            </div>\n        );\n    }\n};\n\nexport default StockDetails;\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}","import React from 'react';\nimport {\n    Accordion, Grid, AccordionDetails, AccordionSummary,\n    Typography, MenuItem, FormControl, Select, Button\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\n\n// import packageJson from '../package.json';\nimport './layout.scss';\nimport { tickerService, daysRangeService, errorMessageService } from './services/generic-service';\nimport Header from './components/header/header';\nimport MostActiveStocksTabs from './components/most-active-stocks-tabs/most-active-stocks-tabs';\nimport DataGrid from './components/data-grid/data-grid';\nimport StockDetails from './components/stock-details/stock-details';\n\nlet arkData = require('./rawData/mergedData.json');\n\nclass Layout extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: ['most-active-stock-panel'],\n            mostActiveDaysRange: 7,\n            errorMessage: '',\n            isInputing: false\n        };\n\n        this.handlePanelChange = this.handlePanelChange.bind(this);\n        this.handleClickDaysRange = this.handleClickDaysRange.bind(this);\n        this.handleSelectDaysRange = this.handleSelectDaysRange.bind(this);\n        this.handleDonationSectionClick = this.handleDonationSectionClick.bind(this);\n\n        this.coffeeEmoji = React.createRef();\n    }\n\n    componentDidMount() {\n        this.tickerSubscription = tickerService.getTicker().subscribe(ticker => {\n            if (ticker) {\n                // expand stock details section if it is closed\n                const panelArr = this.state.expanded;\n                if (panelArr.indexOf('stock-details-panel') === -1) {\n                    panelArr.push('stock-details-panel');\n                }\n                this.setState({ expanded: panelArr });\n\n            } else {\n                this.setState({ ticker: '' });\n            }\n        });\n\n        this.mostActiveDaysRangeSubscription = daysRangeService.getMostActiveDaysRange().subscribe(mostActiveDaysRange => {\n            if (mostActiveDaysRange) {\n                this.setState({ mostActiveDaysRange: mostActiveDaysRange });\n            } else {\n                this.setState({ mostActiveDaysRange: 30 });\n            }\n        });\n\n        this.errorMessageSubscription = errorMessageService.getErrorMessage().subscribe(message => {\n            if (message) {\n                this.setState({ errorMessage: message });\n            } else {\n                this.setState({ errorMessage: '' });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.tickerSubscription.unsubscribe();\n        this.mostActiveDaysRangeSubscription.unsubscribe();\n        this.errorMessageSubscription.unsubscribe();\n    }\n\n    handlePanelChange(panel) {\n        return (event, isExpanded) => {\n            const panelArr = this.state.expanded;\n            if (isExpanded) {\n                panelArr.push(panel)\n            } else {\n                const index = panelArr.indexOf(panel);\n                if (index > -1) {\n                    panelArr.splice(index, 1);\n                }\n            }\n            this.setState({ expanded: panelArr });\n        }\n    };\n\n    handleClickDaysRange(event) {\n        event.stopPropagation();\n    }\n\n    handleSelectDaysRange(event, type) {\n        switch (type) {\n            case 'mostActive':\n                daysRangeService.changeMostActiveDaysRange(event.target.value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleDonationSectionClick() {\n        console.log(this.coffeeEmoji)\n        this.coffeeEmoji.current.click();\n    }\n\n    render() {\n        let notificationBar;\n        if (this.state.errorMessage) {\n            notificationBar = <Alert variant=\"filled\" severity=\"error\" onClose={() => { this.setState({ errorMessage: '' }) }}>{this.state.errorMessage}</Alert>\n        } else {\n            notificationBar = <div></div>\n        }\n        return (\n            <div className=\"layout-wrapper\">\n                <div className=\"header-wrapper\">\n                    <Header />\n                </div>\n                <div className=\"notification-bar-wrapper\">\n                    {notificationBar}\n                </div>\n                <div className=\"accordion-wrapper\">\n                    <Accordion expanded={this.state.expanded.includes('most-active-stock-panel')} onChange={this.handlePanelChange('most-active-stock-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"most-active-stock-panel-content\"\n                            id=\"most-active-stock-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Most Active Stocks</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                <Typography className=\"accordion-second-heading\" component={'span'}>\n                                    Most Active Stocks in\n                                <FormControl className=\"days-dropdown\">\n                                        <Select\n                                            labelId=\"demo-simple-select-placeholder-label-label\"\n                                            id=\"demo-simple-select-placeholder-label\"\n                                            value={this.state.mostActiveDaysRange}\n                                            onClick={(e) => this.handleClickDaysRange(e)}\n                                            onChange={(e) => this.handleSelectDaysRange(e, 'mostActive')}\n                                            MenuProps={{ disableScrollLock: true }}\n                                        >\n                                            <MenuItem value={1}>1 Day</MenuItem>\n                                            <MenuItem value={7}>1 Week</MenuItem>\n                                            <MenuItem value={14}>2 Weeks</MenuItem>\n                                            <MenuItem value={30}>1 Month</MenuItem>\n                                            <MenuItem value={90}>3 Months</MenuItem>\n                                            <MenuItem value={10000}>From 11/12/2019</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Typography>\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <div className=\"most-active-stocks-tabs-wrapper\">\n                                <MostActiveStocksTabs />\n                            </div>\n                        </AccordionDetails>\n\n                    </Accordion>\n\n                    <Accordion expanded={this.state.expanded.includes('stock-details-panel')} onChange={this.handlePanelChange('stock-details-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"stock-details-panel-content\"\n                            id=\"stock-details-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Stock Details</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                {/* <Typography className=\"accordion-second-heading\" component={'span'}>\n                                Chart with ARK Trade History</Typography> */}\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <div className=\"stock-details-wrapper\">\n                                <StockDetails />\n                            </div>\n                        </AccordionDetails>\n\n                    </Accordion>\n\n                    <Accordion expanded={this.state.expanded.includes('data-grid-panel')} onChange={this.handlePanelChange('data-grid-panel')}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"data-grid-panel-content\"\n                            id=\"data-grid-panel-header\">\n\n                            <Grid item xs={5} md={4}>\n                                <Typography className=\"accordion-heading\">Transactions Table</Typography>\n                            </Grid>\n\n                            <Grid item xs={7} md={4} className=\"second-heading-wrapper\">\n                                <Typography className=\"accordion-second-heading\">All ARK Transactions</Typography>\n                            </Grid>\n\n                        </AccordionSummary>\n\n                        <AccordionDetails>\n                            <DataGrid />\n                        </AccordionDetails>\n\n                    </Accordion>\n\n                </div>\n\n                <Grid container className=\"sticky-footer\">\n\n                    <Grid item xs={3} md={3}>\n                        <p className=\"disclaimer\">Disclaimer: This web is built for education only.<br></br>The author takes no responsibility for financial decisions.</p>\n                    </Grid>\n\n                    <Grid item xs={6} md={6} className=\"donation-section\">\n                        <div className=\"donation\" onClick={this.handleDonationSectionClick}>\n                            <form action=\"https://www.paypal.com/donate\" method=\"post\" target=\"_top\">\n                                <input type=\"hidden\" name=\"cmd\" value=\"_donations\" />\n                                <input type=\"hidden\" name=\"business\" value=\"xzhu@wpi.edu\" />\n                                <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n                                <Button size=\"small\" variant=\"contained\" color=\"primary\" className=\"emoji-submit-button\" type=\"submit\" ref={this.coffeeEmoji}>\n                                    <span name=\"submit\" role=\"img\" aria-label=\"coffee\">Like this? <br></br>Pls buy me a coffee~☕</span>\n                                </Button>\n                                <img alt=\"\" border=\"0\" src=\"https://www.paypal.com/en_US/i/scr/pixel.gif\" width=\"1\" height=\"1\" />\n                            </form>\n                        </div>\n                    </Grid>\n\n                    <Grid item xs={3} md={3} className=\"additonal-info-section\">\n                        <div className='info-container'>\n                            <p className='info-version'>\n                                <Button color=\"secondary\">\n                                    <a href=\"https://github.com/KarlZhu-SE/ark-funds-monitor\">Github Link</a>\n                                </Button>\n                                {/* &nbsp;&nbsp;Version: {packageJson.version} */}\n                            </p>\n                            <p className='info-update-date'>Latest ARK Data: {arkData[0]['Date']}</p>\n                        </div>\n                    </Grid>\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Layout from './layout';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}